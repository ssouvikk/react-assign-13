{"version":3,"sources":["VideoCard/VideoCard.module.css","MainPage/MainPage.module.css","VideoCard/VideoCard.js","VideoDetails/VideoDetails.js","MainPage/MainPage.js","App.js","serviceWorker.js","index.js","VideoDetails/VideoDetails.module.css"],"names":["module","exports","VideoCard","props","data","id","thumbnail","title","className","classes","activeId","active","to","Thumbnail","src","alt","Title","VideoDetails","this","videoData","vimeoId","isLiked","isSaved","description","views","styles","wrapper","videoFrame","shortInfo","iconWrapper","icons","style","color","aria-hidden","details","Component","MainPage","state","playList","fetchPlayList","Axios","get","then","response","setState","catch","err","console","log","fetchVideoDetails","match","params","window","scrollTo","top","behavior","renderVideos","map","v","key","componentDidUpdate","prevProps","prevStates","componentDidMount","container","playlistContainer","App","exact","path","render","component","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,UAAY,6BAA6B,MAAQ,yBAAyB,OAAS,4B,mBCA9ID,EAAOC,QAAU,CAAC,UAAY,4BAA4B,kBAAoB,sC,0QCe/DC,EAZG,SAACC,GAAW,IAAD,EACKA,EAAMC,KAA/BC,EADoB,EACpBA,GAAIC,EADgB,EAChBA,UAAWC,EADK,EACLA,MACvB,OACC,kBAAC,IAAD,CAAMC,UAAS,UAAKC,IAAQP,UAAb,YAA0BC,EAAMO,WAAaL,EAAKI,IAAQE,OAAS,IAAMC,GAAE,sBAAiBP,IAC1G,6BACC,yBAAKG,UAAWC,IAAQI,UAAWC,IAAKR,EAAWS,IAAI,oBACvD,wBAAIP,UAAWC,IAAQO,OAAQT,M,gBCPdU,E,uKACV,IAAD,EACyDC,KAAKf,MAAMgB,UAApEZ,EADA,EACAA,MAAOa,EADP,EACOA,QAASC,EADhB,EACgBA,QAASC,EADzB,EACyBA,QAASC,EADlC,EACkCA,YAAaC,EAD/C,EAC+CA,MAEvD,OACC,yBAAKhB,UAAWiB,IAAOC,SACtB,4BAAQlB,UAAWiB,IAAOE,WAAYpB,MAAOA,EAAOO,IAAG,yCAAoCM,KAC3F,yBAAKZ,UAAWiB,IAAOG,WACtB,uBAAGpB,UAAWiB,IAAOD,OAArB,UAAgCA,EAAhC,WACA,yBAAKhB,UAAWiB,IAAOI,aACtB,0BAAMrB,UAAWiB,IAAOK,OACtBT,EAAU,uBAAGU,MAAO,CAAEC,MAAO,WAAaxB,UAAU,cAAcyB,cAAY,SAAe,uBAAGzB,UAAU,gBAAgByB,cAAY,UAExI,0BAAMzB,UAAWiB,IAAOK,OAAxB,IAAgC,uBAAGtB,UAAU,kBAAkByB,cAAY,SAA3E,KACA,0BAAMzB,UAAWiB,IAAOK,OACtBR,EAAU,uBAAGS,MAAO,CAAEC,MAAO,WAAaxB,UAAU,iBAAiByB,cAAY,SAAe,uBAAGzB,UAAU,mBAAmByB,cAAY,YAIhJ,wBAAIzB,UAAWiB,IAAOlB,OAAQA,GAC9B,uBAAGC,UAAWiB,IAAOS,SAAUX,Q,GApBOY,a,iBCGrBC,E,4MACjBC,MAAQ,CACJC,SAAU,GACVnB,UAAW,I,EAGfoB,cAAgB,WACZC,IAAMC,IAAI,wDACLC,MAAK,SAAAC,GACF,EAAKC,SAAS,CAAEN,SAAS,YAAKK,EAASvC,WAE1CyC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,EAGlCG,kBAAoB,WAChBT,IAAMC,IAAI,qDAAuD,EAAKtC,MAAM+C,MAAMC,OAAO9C,IACpFqC,MAAK,SAAAC,GACF,EAAKC,SAAS,CAAEzB,UAAU,eAAMwB,EAASvC,QACzCgD,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,cAEvCV,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,EAGlCU,aAAe,WACX,OAAO,EAAKnB,MAAMC,SAASmB,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAWC,IAAKD,EAAErD,GAAIK,SAAU,EAAKP,MAAM+C,MAAMC,OAAO9C,GAAID,KAAMsD,Q,EAG1GE,mBAAqB,SAACC,EAAWC,GACb,EAAK3D,MAAM+C,MAAMC,OAAO9C,KAC3BwD,EAAUX,MAAMC,OAAO9C,IAEhC,EAAK4C,qB,EAIbc,kBAAoB,WAChB,EAAKd,oBACL,EAAKV,iB,uDAIL,OACI,yBAAK/B,UAAWiB,IAAOuC,WACnB,kBAAC,EAAD,CAAc7C,UAAWD,KAAKmB,MAAMlB,YACpC,yBAAKX,UAAWiB,IAAOwC,mBAClB/C,KAAKsC,qB,GA7CYrB,aCAjB+B,E,uKAGnB,OACC,kBAAC,IAAD,KACC,yBAAK1D,UAAU,QACd,kBAAC,IAAD,CAAO2D,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,IAAD,CAAUzD,GAAG,qBACjD,kBAAC,IAAD,CAAOwD,KAAM,kBAAmBE,UAAWlC,U,GAPfD,aCMboC,QACW,cAA7BnB,OAAOoB,SAASC,UAEe,UAA7BrB,OAAOoB,SAASC,UAEhBrB,OAAOoB,SAASC,SAASvB,MACvB,2DCZNwB,IAASL,OACP,kBAAC,IAAMM,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtC,MAAK,SAAAuC,GACJA,EAAaC,gBAEdrC,OAAM,SAAAsC,GACLpC,QAAQoC,MAAMA,EAAMC,a,kBExI5BpF,EAAOC,QAAU,CAAC,QAAU,8BAA8B,WAAa,iCAAiC,MAAQ,4BAA4B,YAAc,kCAAkC,UAAY,gCAAgC,MAAQ,4BAA4B,QAAU,iC","file":"static/js/main.c6c654a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"VideoCard\":\"VideoCard_VideoCard__2bnHe\",\"Thumbnail\":\"VideoCard_Thumbnail__1B6yD\",\"Title\":\"VideoCard_Title__3ZXIL\",\"active\":\"VideoCard_active__1RLeA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MainPage_container__8eOBs\",\"playlistContainer\":\"MainPage_playlistContainer__Q0XZT\"};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classes from \"./VideoCard.module.css\";\n\nconst VideoCard = (props) => {\n\tconst { id, thumbnail, title } = props.data\n\treturn (\n\t\t<Link className={`${classes.VideoCard} ${props.activeId === id ? classes.active : \"\"}`} to={`/videoWatch/${id}`} >\n\t\t\t<div>\n\t\t\t\t<img className={classes.Thumbnail} src={thumbnail} alt=\"Video Thumbnail\" />\n\t\t\t\t<h3 className={classes.Title}>{title}</h3>\n\t\t\t</div>\n\t\t</Link>\n\t);\n};\n\nexport default VideoCard;\n","import React, { Component } from \"react\";\r\nimport styles from \"./VideoDetails.module.css\";\r\n\r\nexport default class VideoDetails extends Component {\r\n\trender() {\r\n\t\tconst { title, vimeoId, isLiked, isSaved, description, views } = this.props.videoData;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={styles.wrapper}>\r\n\t\t\t\t<iframe className={styles.videoFrame} title={title} src={`https://player.vimeo.com/video/${vimeoId}`} />\r\n\t\t\t\t<div className={styles.shortInfo}>\r\n\t\t\t\t\t<p className={styles.views}>{`${views} views`}</p>\r\n\t\t\t\t\t<div className={styles.iconWrapper}>\r\n\t\t\t\t\t\t<span className={styles.icons}>\r\n\t\t\t\t\t\t\t{isLiked ? <i style={{ color: \"#FAD744\" }} className=\"fa fa-heart\" aria-hidden=\"true\" ></i> : <i className=\"fa fa-heart-o\" aria-hidden=\"true\"></i>}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className={styles.icons}> <i className=\"fa fa-comment-o\" aria-hidden=\"true\"></i> </span>\r\n\t\t\t\t\t\t<span className={styles.icons}>\r\n\t\t\t\t\t\t\t{isSaved ? <i style={{ color: \"#FAD744\" }} className=\"fa fa-bookmark\" aria-hidden=\"true\" ></i> : <i className=\"fa fa-bookmark-o\" aria-hidden=\"true\"></i>}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h1 className={styles.title}>{title}</h1>\r\n\t\t\t\t<p className={styles.details}>{description}</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import Axios from 'axios'\r\nimport React, { Component } from 'react'\r\nimport VideoCard from '../VideoCard/VideoCard'\r\nimport VideoDetails from '../VideoDetails/VideoDetails'\r\nimport styles from './MainPage.module.css'\r\n\r\nexport default class MainPage extends Component {\r\n    state = {\r\n        playList: [],\r\n        videoData: {}\r\n    }\r\n\r\n    fetchPlayList = () => {\r\n        Axios.get('https://5d76bf96515d1a0014085cf9.mockapi.io/playlist')\r\n            .then(response => {\r\n                this.setState({ playList: [...response.data] })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    fetchVideoDetails = () => {\r\n        Axios.get(\"https://5d76bf96515d1a0014085cf9.mockapi.io/video/\" + this.props.match.params.id)\r\n            .then(response => {\r\n                this.setState({ videoData: { ...response.data } })\r\n                window.scrollTo({ top: 0, behavior: 'smooth' });\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    renderVideos = () => {\r\n        return this.state.playList.map(v => <VideoCard key={v.id} activeId={this.props.match.params.id} data={v} />)\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevStates) => {\r\n        let currentId = this.props.match.params.id\r\n        let lastId = prevProps.match.params.id\r\n        if (currentId !== lastId) {\r\n            this.fetchVideoDetails()\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.fetchVideoDetails()\r\n        this.fetchPlayList()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.container}>\r\n                <VideoDetails videoData={this.state.videoData} />\r\n                <div className={styles.playlistContainer}>\r\n                    {this.renderVideos()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, Redirect } from \"react-router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport MainPage from \"./MainPage/MainPage\";\n\nexport default class App extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<BrowserRouter>\n\t\t\t\t<div className=\"blue\">\n\t\t\t\t\t<Route exact path=\"/\" render={() => <Redirect to=\"/videoWatch/1\" />} />\n\t\t\t\t\t<Route path={\"/videoWatch/:id\"} component={MainPage} />\n\t\t\t\t</div>\n\t\t\t</BrowserRouter>\n\t\t);\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"VideoDetails_wrapper__20X-L\",\"videoFrame\":\"VideoDetails_videoFrame__bGTNI\",\"views\":\"VideoDetails_views__2jIyM\",\"iconWrapper\":\"VideoDetails_iconWrapper__36tTQ\",\"shortInfo\":\"VideoDetails_shortInfo__k5OIr\",\"icons\":\"VideoDetails_icons__eSGAe\",\"details\":\"VideoDetails_details__IKdgr\"};"],"sourceRoot":""}